// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SearchScreen Component renders correctly 1`] = `
<RNCSafeAreaView
  style={
    Object {
      "flex": 1,
      "marginHorizontal": "2%",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "white",
        "flex": 1,
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingLeft": 2,
        "paddingRight": 2,
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="SearchBackbtn"
    >
      <Text />
    </View>
    <Text
      style={
        Object {
          "fontSize": 20,
          "fontWeight": "bold",
        }
      }
      testID="SearchscreenTitle"
    >
      MyCategory
    </Text>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="SearchscreenDeletebtn"
    >
      <Text />
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "flexDirection": "row",
        "padding": "1%",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#ffffff",
          "borderRadius": 10,
          "elevation": 4,
          "flex": 1,
          "flexDirection": "row",
          "shadowColor": "#000000",
          "shadowOffset": Object {
            "height": 3,
            "width": 0,
          },
          "shadowOpacity": 0.24,
          "shadowRadius": 4,
        }
      }
    >
      <View
        accessibilityLabel="search"
        accessibilityRole="button"
        accessibilityState={
          Object {
            "disabled": undefined,
          }
        }
        accessible={true}
        focusable={false}
        hitSlop={
          Object {
            "bottom": 6,
            "left": 6,
            "right": 6,
            "top": 6,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "overflow": "hidden",
            },
            Array [
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "margin": 6,
                "overflow": "hidden",
              },
              Object {
                "borderRadius": 18,
                "height": 36,
                "width": 36,
              },
              undefined,
              undefined,
            ],
          ]
        }
      >
        <View>
          <Text />
        </View>
      </View>
      <TextInput
        accessibilityRole="search"
        accessibilityTraits="search"
        allowFontScaling={true}
        keyboardAppearance="light"
        onChangeText={[Function]}
        placeholder="Search"
        placeholderTextColor="rgba(0, 0, 0, 0.54)"
        rejectResponderTermination={true}
        returnKeyType="search"
        selectionColor="#6200ee"
        style={
          Array [
            Object {
              "alignSelf": "stretch",
              "flex": 1,
              "fontSize": 18,
              "minWidth": 0,
              "paddingLeft": 8,
              "textAlign": "left",
            },
            Object {
              "color": "#000000",
              "fontFamily": "System",
              "fontWeight": "400",
            },
            undefined,
          ]
        }
        testID="SearchscreenSearchbar"
        underlineColorAndroid="transparent"
        value=""
      />
      <View
        accessibilityLabel="clear"
        accessibilityRole="button"
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessible={true}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 6,
            "left": 6,
            "right": 6,
            "top": 6,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "overflow": "hidden",
            },
            Array [
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "margin": 6,
                "overflow": "hidden",
              },
              Object {
                "borderRadius": 18,
                "height": 36,
                "width": 36,
              },
              Object {
                "opacity": 0.32,
              },
              undefined,
            ],
          ]
        }
      >
        <View>
          <Text />
        </View>
      </View>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <Text />
    </View>
  </View>
  <View
    style={
      Object {
        "flex": 9,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "flexDirection": "column",
          "justifyContent": "center",
          "paddingTop": null,
        }
      }
    >
      <ActivityIndicator
        animating={true}
        color="#0377fc"
        hidesWhenStopped={true}
        size="large"
        style={
          Object {
            "flexDirection": "row",
            "justifyContent": "center",
          }
        }
      />
      <Text>
        Loading
      </Text>
    </View>
  </View>
  <View>
    <Modal
      animationType="none"
      deviceHeight={null}
      deviceWidth={null}
      hardwareAccelerated={false}
      hideModalContentWhileAnimating={false}
      onBackdropPress={[Function]}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      onRequestClose={[Function]}
      panResponderThreshold={4}
      scrollHorizontal={false}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      statusBarTranslucent={false}
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
      transparent={true}
      visible={false}
    >
      <View
        accessible={true}
        focusable={true}
        forwardedRef={[Function]}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "black",
            "bottom": 0,
            "height": 1334,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "width": 750,
          }
        }
      />
      <View
        deviceHeight={null}
        deviceWidth={null}
        forwardedRef={[Function]}
        hideModalContentWhileAnimating={false}
        onBackdropPress={[Function]}
        onModalHide={[Function]}
        onModalWillHide={[Function]}
        onModalWillShow={[Function]}
        panResponderThreshold={4}
        pointerEvents="box-none"
        scrollHorizontal={false}
        scrollOffset={0}
        scrollOffsetMax={0}
        scrollTo={null}
        statusBarTranslucent={false}
        style={
          Object {
            "flex": 1,
            "justifyContent": "flex-end",
            "margin": 0,
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
          }
        }
        supportedOrientations={
          Array [
            "portrait",
            "landscape",
          ]
        }
        swipeThreshold={100}
      >
        <View>
          <RCTScrollView
            ListFooterComponent={[Function]}
            ListHeaderComponent={[Function]}
            data={
              Array [
                "Ascending",
                "Descending",
                "Title",
              ]
            }
            disableVirtualization={false}
            getItem={[Function]}
            getItemCount={[Function]}
            horizontal={false}
            initialNumToRender={10}
            keyExtractor={[Function]}
            maxToRenderPerBatch={10}
            onContentSizeChange={[Function]}
            onEndReachedThreshold={2}
            onLayout={[Function]}
            onMomentumScrollEnd={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onScrollEndDrag={[Function]}
            removeClippedSubviews={false}
            renderItem={[Function]}
            scrollEnabled={false}
            scrollEventThrottle={50}
            stickyHeaderIndices={Array []}
            updateCellsBatchingPeriod={50}
            viewabilityConfigCallbackPairs={Array []}
            windowSize={21}
          >
            <View>
              <View
                onLayout={[Function]}
              >
                <View>
                  <View
                    style={
                      Object {
                        "backgroundColor": "#e6e6e6",
                        "borderTopLeftRadius": 20,
                        "borderTopRightRadius": 20,
                        "padding": "2%",
                      }
                    }
                  />
                </View>
              </View>
              <View
                onLayout={[Function]}
                style={null}
              >
                <View
                  style={
                    Object {
                      "backgroundColor": "#e6e6e6",
                      "padding": "1%",
                    }
                  }
                >
                  <View
                    accessible={true}
                    collapsable={false}
                    focusable={true}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Array [
                        Object {
                          "borderRadius": 20,
                          "padding": "1.5%",
                        },
                        Object {
                          "backgroundColor": "white",
                        },
                      ]
                    }
                  >
                    <Text
                      style={
                        Object {
                          "fontSize": 20,
                          "fontWeight": "bold",
                          "textAlign": "center",
                        }
                      }
                    >
                      Ascending
                    </Text>
                  </View>
                </View>
              </View>
              <View
                onLayout={[Function]}
                style={null}
              >
                <View
                  style={
                    Object {
                      "backgroundColor": "#e6e6e6",
                      "padding": "1%",
                    }
                  }
                >
                  <View
                    accessible={true}
                    collapsable={false}
                    focusable={true}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Array [
                        Object {
                          "borderRadius": 20,
                          "padding": "1.5%",
                        },
                        Object {
                          "backgroundColor": "white",
                        },
                      ]
                    }
                  >
                    <Text
                      style={
                        Object {
                          "fontSize": 20,
                          "fontWeight": "bold",
                          "textAlign": "center",
                        }
                      }
                    >
                      Descending
                    </Text>
                  </View>
                </View>
              </View>
              <View
                onLayout={[Function]}
                style={null}
              >
                <View
                  style={
                    Object {
                      "backgroundColor": "#e6e6e6",
                      "padding": "1%",
                    }
                  }
                >
                  <View
                    accessible={true}
                    collapsable={false}
                    focusable={true}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Array [
                        Object {
                          "borderRadius": 20,
                          "padding": "1.5%",
                        },
                        Object {
                          "backgroundColor": "white",
                        },
                      ]
                    }
                  >
                    <Text
                      style={
                        Object {
                          "fontSize": 20,
                          "fontWeight": "bold",
                          "textAlign": "center",
                        }
                      }
                    >
                      Title
                    </Text>
                  </View>
                </View>
              </View>
              <View
                onLayout={[Function]}
              >
                <View>
                  <View
                    style={
                      Object {
                        "backgroundColor": "#e6e6e6",
                        "padding": "4%",
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </RCTScrollView>
        </View>
      </View>
    </Modal>
  </View>
</RNCSafeAreaView>
`;
